:host {
  display: flex;
  flex-direction: row-reverse;

  &.position-outside {
    position: absolute;
    z-index: 10;
    top: -32px;
    right: 0;
    height: 24px;

    &.outside-corner {
      top: -26px;
      right: -26px;
    }
  }

  &.position-inside {
    display: flex;
    align-items: center;
    justify-content: center;
    border-left: 1px solid var(--fm-color-border);
  }
}

.fm-modal--header-action {
  position: relative;
  cursor: pointer;
  width: 24px;
  height: 24px;
  opacity: 0.5;
  transition:
    background 300ms ease,
    box-shadow 300ms ease,
    opacity 300ms ease;

  .icon-content {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
  }

  &:hover {
    opacity: 1;
  }

  &:focus {
    outline: none;
    z-index: 10;
  }

  :host.position-outside & {
    margin-left: 8px;
    border-radius: 100%;
    background-color: var(--fm-color-body-bg);

    &:focus {
      box-shadow: 0 0 0 4px rgb(from var(--fm-color-body-bg) r g b / 0.6);
    }

    &.no-background {
      background-color: transparent;
      opacity: 1;

      .icon-content {
        transform: scale(1.2);
      }

      &:focus {
        background-color: rgb(from var(--fm-color-body-bg) r g b / 0.4);
        box-shadow: 0 0 0 4px rgb(from var(--fm-color-body-bg) r g b / 0.2);
      }

      &:hover {
        background-color: rgb(from var(--fm-color-body-bg) r g b / 0.6);
      }
    }
  }

  :host.position-inside & {
    background-color: var(--fm-color-header-bg);
    min-width: var(--fm-header-height);
    width: var(--fm-header-height);
    height: 100%;
    opacity: 1;
    margin: 0;
    transition:
      box-shadow 300ms ease,
      filter 300ms ease;

    .icon-content {
      opacity: 0.5;
      transition: opacity 300ms ease;
    }

    &::before {
      content: '';
      display: block;
      position: absolute;
      inset: 0;
      opacity: 0;
      border: 0 solid transparent;
      background: transparent;
      transition:
        opacity 300ms ease,
        border 300ms ease;
    }

    &:hover {
      filter: brightness(0.9);

      .icon-content {
        opacity: 1;
      }
    }

    &:focus {
      &::before {
        border: 4px solid var(--fm-color-action-focus-outline);
        opacity: 1;
      }
    }

    &:first-child {
      border-radius: 0 var(--fm-frame-border-radius) 0 0;
    }
  }

  :host.maximized.position-inside & {
    border-radius: 0;
  }
}

.fm-modal-close-btn {
  .line {
    display: block;
    position: absolute;
    height: 1px;
    transform: rotate(45deg);

    & + .line {
      transform: rotate(-45deg);
    }
  }

  :host.position-outside & {
    .line {
      background-color: var(--fm-color-body-text);
      width: 13px;
    }
  }

  :host.position-inside & {
    .line {
      background-color: var(--fm-color-header-text);
      width: 18px;
    }
  }
}

.fm-modal-maximize-btn {
  .frame {
    position: relative;
    z-index: 1;
    width: 14px;
    height: 14px;
    border: 1px solid;
    border-left-color: transparent !important;
    border-bottom-color: transparent !important;

    .border {
      position: absolute;

      &.left {
        width: 1px;
        height: 9px;
        left: -1px;
        top: -1px;
      }

      &.bottom {
        width: 9px;
        height: 1px;
        bottom: -1px;
        right: -1px;
      }
    }
  }

  .arrow {
    position: absolute;
    width: 14px;
    height: 14px;
    transform: rotate(180deg);
    z-index: 1;

    .stem {
      position: absolute;
      width: 10px;
      height: 1px;
      transform-origin: right center;
      transform: rotate(-45deg);
      top: 0;
      left: 3.5px;
      z-index: 1;
    }

    .corner {
      position: absolute;
      top: 3px;
      left: 6px;
      width: 5px;
      height: 5px;
      border: 1px solid;
      border-top-color: transparent !important;
      border-right-color: transparent !important;
      z-index: 1;
    }
  }

  :host.maximized & {
    .icon-content {
      transform: rotate(180deg);
    }
  }

  :host.maximized &,
  :host.position-inside & {
    .corner,
    .frame {
      border-color: var(--fm-color-header-text);
    }

    .border,
    .stem {
      background-color: var(--fm-color-header-text);
    }
  }

  :host:not(.maximized).position-outside & {
    .corner,
    .frame {
      border-color: var(--fm-color-body-text);
    }

    .border,
    .stem {
      background-color: var(--fm-color-body-text);
    }

    .stem {
      width: 8px;
      left: 1.5px;
    }

    .border.left {
      height: 6px;
    }

    .border.bottom {
      width: 6px;
    }

    .corner {
      left: 3px;
      top: 3px;
      width: 4px;
      height: 4px;
    }

    .frame,
    .arrow {
      width: 10px;
      height: 10px;
    }
  }
}
